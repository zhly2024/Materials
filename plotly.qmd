---
title: "plotly"
author: "zhly"
date: "2024-01-02"
categories: [r, code, visualization]
format: html
editor: visual
description: "An interactive graphing library for R"
---

```{r,message=FALSE}
library(plotly)
```

# Web-based ggplot2 graphics

```{r}
library(plotly)
g <- ggplot(faithful, aes(x = eruptions, y = waiting)) +
  stat_density_2d(aes(fill = ..level..), geom = "polygon") + 
  xlim(1, 6) + ylim(40, 100)
ggplotly(g)
```

```{r}
gg <- ggplotly(g, dynamicTicks = "y")
style(gg, hoveron = "points", hoverinfo = "x+y+text", hoverlabel = list(bgcolor = "white"))
```

# Using plotly without ggplot2

```{r}
plot_ly(z = ~volcano, type = "surface")
```

```{r}
fig <- plot_ly(data = iris, x = ~Sepal.Length, y = ~Petal.Length)

fig
```

```{r}
fig <- plot_ly(data = iris, x = ~Sepal.Length, y = ~Petal.Length,
               marker = list(size = 10,
                             color = 'rgba(255, 182, 193, .9)',
                             line = list(color = 'rgba(152, 0, 0, .8)',
                                         width = 2)))
fig <- fig %>% layout(title = 'Styled Scatter',
         yaxis = list(zeroline = FALSE),
         xaxis = list(zeroline = FALSE))

fig
```

```{r}
trace_0 <- rnorm(100, mean = 5)
trace_1 <- rnorm(100, mean = 0)
trace_2 <- rnorm(100, mean = -5)
x <- c(1:100)

data <- data.frame(x, trace_0, trace_1, trace_2)

fig <- plot_ly(data, x = ~x)
fig <- fig %>% add_trace(y = ~trace_0, name = 'trace 0',mode = 'lines')
fig <- fig %>% add_trace(y = ~trace_1, name = 'trace 1', mode = 'lines+markers')
fig <- fig %>% add_trace(y = ~trace_2, name = 'trace 2', mode = 'markers')

fig
```

continued

[Interactive web-based data visualization with R, plotly, and shiny](https://plotly-r.com/)

[learn more](https://github.com/plotly/plotly.R)

[learn more](https://plotly.com/r/basic-charts/)
